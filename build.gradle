plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.0'
    id 'application'
    id 'antlr'
    id 'org.jlleitschuh.gradle.ktlint' version '10.0.0'
    id 'com.adarshr.test-logger' version '3.0.0'
    id 'jacoco'
}

group = 'org.actorlang'
version = '1.1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

application {
    mainClass.set('org.actorlang.MainKt')
    applicationName = 'actorlang'
}

generateGrammarSource {
    arguments += ["-visitor", "-long-messages"]
    outputDirectory = file("src/main/java/")
}

jacoco {
    toolVersion = '0.8.7'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        xml.destination = file("${buildDir}/reports/jacoco/report.xml")
        html.enabled = true
        html.destination = file("${buildDir}/reports/jacoco/html")
        csv.enabled = false
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "org/actorlang/antlr/gen/*"
            ])
        }))
    }
}

dependencies {
    antlr 'org.antlr:antlr4:4.9'

    // Tests
    testImplementation "org.mockito:mockito-core:3.+"
    testImplementation 'org.mockito:mockito-inline:3.11.0'
    testImplementation "org.mockito.kotlin:mockito-kotlin:3.2.0"
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}
